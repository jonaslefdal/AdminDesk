@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<style>
    .nav-item a {
        margin-left: 20px; /* Plassering til venstre for navigasjonslenker */
    }
</style>

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Hvis brukeren er logget inn -->
        <li class="nav-item">
            <a class="nav-link text-dark custom-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Min side</a>
            <!-- Lenke til brukerens profilside -->
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <!-- Logg ut-skjema -->
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                <!-- Logg ut-knapp -->
            </form>
        </li>
    }
    else
    {
        <!-- Hvis brukeren ikke er logget inn -->
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrer</a>
            <!-- Lenke til registreringsside -->
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Logg inn</a>
            <!-- Lenke til påloggingsside -->
        </li>
    }
</ul>
